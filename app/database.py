# SQLAlchemy kÃ¼tÃ¼phanelerini ve veritabanÄ± iÅŸlemleri iÃ§in gereken sÄ±nÄ±flarÄ± import ediyoruz
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, declarative_base, Session

# Ortam deÄŸiÅŸkenlerini (Ã¶rneÄŸin .env dosyasÄ±ndan) okumak iÃ§in
import os
from dotenv import load_dotenv

# .env dosyasÄ±nÄ± yÃ¼kle
load_dotenv()

# .env dosyasÄ±ndaki DATABASE_URL deÄŸiÅŸkenini alÄ±yoruz
DATABASE_URL = os.getenv("DATABASE_URL")

# SQLAlchemy ile veritabanÄ± motorunu oluÅŸturuyoruz
engine = create_engine(DATABASE_URL)

# SessionLocal, her HTTP isteÄŸi iÃ§in baÄŸÄ±msÄ±z bir veritabanÄ± oturumu yaratmakta kullanÄ±lÄ±r
SessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)

# Base sÄ±nÄ±fÄ±, tÃ¼m modellerin (tablolarÄ±n) kalÄ±tÄ±m alacaÄŸÄ± temel sÄ±nÄ±ftÄ±r
Base = declarative_base()

# ğŸš€ VeritabanÄ± baÄŸlantÄ±sÄ±nÄ± saÄŸlayacak dependency fonksiyonu
def get_db():
    db: Session = SessionLocal()
    try:
        yield db
    finally:
        db.close()
